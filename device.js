// Generated by CoffeeScript 1.10.0
var Client, Device, async, cache, client, cozydb, dsHost, dsPort, logger;

Client = require('request-json').JsonClient;

cozydb = require('cozydb');

async = require('async');

logger = require('printit')({
    date: false,
    prefix: 'models:device'
});

module.exports = Device = cozydb.getModel('Device', {
    login: String,
    password: String,
    configuration: Object
});

cache = {};

dsHost = 'localhost';

dsPort = '9101';

client = new Client("http://" + dsHost + ":" + dsPort + "/");

if (process.env.NODE_ENV === "production" || process.env.NODE_ENV === "test") {
    client.setBasicAuth(process.env.NAME, process.env.TOKEN);
}

Device.update = function(callback) {
    return client.post("request/access/all/", {}, function(err, res, accesses) {
        var access, i, len;
        cache = {};
        if (err != null) {
            logger.error(err);
            return callback(err);
        } else {
            if (accesses != null) {
                for (i = 0, len = accesses.length; i < len; i++) {
                    access = accesses[i];
                    cache[access.value.login] = access.value.token;
                }
                if (callback != null) {
                    return callback();
                }
            } else {
                if (callback != null) {
                    return callback();
                }
            }
        }
    });
};

Device.isAuthenticated = function(login, password, callback) {
    var isPresent;
    logger.debug("login: ", login);
    logger.debug("password: ", password);
    logger.debug("cache: ", cache);
    isPresent = (cache[login] != null) && cache[login] === password;
    if (isPresent || process.env.NODE_ENV === "development") {
        return callback(true);
    } else {
        return this.update(function() {
            return callback((cache[login] != null) && cache[login] === password);
        });
    }
};
